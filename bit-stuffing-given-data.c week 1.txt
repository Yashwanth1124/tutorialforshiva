#include <stdio.h>
#include <stdlib.h> // for exit()
#include <string.h> // for strlen()

int main()
{
    int b[100], b1[100], l, k, n = 0, i, j, z, i1, s[20], f[8] = {0, 1, 1, 1, 1, 1, 1, 0};
    static int a[100];
    char ch = 'y', bs[50];
    int j1; // Declare j1 here

    do
    {
        i1 = z = n = 0;
        printf("\n Enter the bit string (space for each byte): ");
        fgets(bs, sizeof(bs), stdin); // Use fgets instead of gets
        bs[strcspn(bs, "\n")] = '\0'; // Remove newline character

        for (i = 0; bs[i] != '\0'; i++)
        {
            if (bs[i] != ' ')
                b[n++] = bs[i] - '0';
        }

        for (i = 0; i < n; i++)
        {
            if (b[i] == 1)
            {
                i1++;
                if (i1 == 5)
                {
                    s[z++] = i + 1;
                    i1 = 0;
                }
            }
            else
            {
                i1 = 0;
            }
        }

        j = j1 = 0; // Initialize j and j1
        for (i = 0; i < z; i++)
        {
            while (j < s[i])
                b1[j1++] = b[j++];
            b1[j1++] = 0;
        }
        while (j1 < n + z)
            b1[j1++] = b[j++];

        l = n / 8;
        for (i = 0; l > 0; i++)
        {
            a[i] = l % 2;
            l = l / 2;
        }

        printf("\nAfter stuffing: ");
        for (j = 7; j >= 0; j--)
            printf("%d", a[j]);
        printf(" ");
        for (k = 0; k < 8; k++)
            printf("%d", f[k]);
        printf(" ");
        for (k = 0; k < j1; k++)
            printf("%d", b1[k]);
        printf(" ");
        for (k = 0; k < 8; k++)
            printf("%d", f[k]);
        printf("\n\n Do you want to continue? (y/n): ");
        scanf(" %c", &ch); // Use scanf to read character input
    } while (ch == 'y' || ch == 'Y');

    return 0;
}
